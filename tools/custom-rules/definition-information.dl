// 定制 entryPoints.
#include "entry-points.dl"

// 加载 CHA 算法, 提供泛化能力
#include "detection-algorithm.dl"

// 加载 计算函数摘要 谓词
#include "method-summary.dl"

// 确定 污点分析信息

#define INFO_FLOW_LABEL "UnSafeSerCheck"

// 设置 source 和 sink 函数名
#include "define-source-and-sink-method-name.dl"

#include "extend-readObject.dl"

TaintSourceMethod(?lable, ?method) :-
	?lable = INFO_FLOW_LABEL,
	DefineSourceMethodName(simpleMethodName),
	// 同样对于 unserialize，
	// 不太需要 Method_Modifier
	// Method_Modifier("public", ?method),
	DefineSourceMethodClass(?class),
	Method_DeclaringType(?method, ?class),
	Method_SimpleName(?method, simpleMethodName),
	!Method_Modifier("abstract", ?method).

LeakingSinkMethod(?lable, ?method) :-
	?lable = INFO_FLOW_LABEL,
	DefineSinkMethodName(simpleMethodName),
	// Method_Modifier("public", ?method),
	Method_SimpleName(?method, simpleMethodName),
	!Method_Modifier("abstract", ?method).

// 设置 : 
// ParamToRetTaintTransferMethod
// ParamToBaseTaintTransferMethod
// BaseToParamTaintTransferMethod
// BaseToRetTaintTransferMethod
// 这里提供一种轻量且尽可能不需要设置的构造器
// 不然需要设置的东西太多了
// 可以参考 souffle-logic/addons/information-flow/android-taint-wrappers.dl

# include "property-tree/identify-chain-paths.dl"

#include "output.dl"
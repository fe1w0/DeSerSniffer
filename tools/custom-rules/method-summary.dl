// 一期计划:
// 计算函数的 return parameter base(this) 三者关系
// 计算 parameters 之间的关系

// 主要依托 points-to 分析

// index-th 可以传递到 return
.decl ParamToRetSummarizeMethod(?index:number, ?method:Method)

// index-th 参数 可以传递到 base(this)
.decl ParamToBaseSummarizeMethod(?index:number, ?method:Method)

// original_index-th 参数是 alias_index 参数的别名对象
.decl ParamToOtherParamSummarizeMethod(?method: Method, ?original_index: number, ?alias_index: number)

// base(this) 可以 传递到 index-th 参数
.decl BaseToParamSummarizeMethod(?index:number, ?method:Method)

// base(this) 可以传递到 return
.decl BaseToRetSummarizeMethod(?method: Method)

// 需要注意的是，对于原框架中，只要能得到这些函数名
// 目前的想法是，先计算出上述信息，再根据这些信息直接推出 MethodName.

.decl ParamToRetSummarizeMethodName(?method: Method)
.decl ParamToBaseSummarizeMethodName(?method: Method)
.decl ParamToOtherParamSummarizeMethodName(?method: Method)

.decl BaseToParamSummarizeMethodName(?method: Method)
.decl BaseToRetSummarizeMethodName(?method: Method)


ParamToRetSummarizeMethod(?index, ?method):-
    // 函数内分析，确保函数在CG中。
    mainAnalysis.Reachable(?method),
    // parmam 是函数的形式参数
    FormalParam(?index, ?method, _),
    // return 是函数的返回值
    isReturnNonvoid_Insn(?instruction),
    Instruction_Method(?instruction, ?method).


ParamToRetTaintTransferMethod(?method),
ParamToRetSummarizeMethodName(?method) :-
    ParamToRetSummarizeMethod(_, ?method).

ParamToBaseSummarizeMethod(?index, ?method) :-
    // 函数内分析，确保函数在CG中。
    mainAnalysis.Reachable(?method),
    // 该 method 有函数参数
    FormalParam(?index, ?method, _),
    // 找到 @this
    ThisVar(?method, ?thisVar),
    // l0#_0 = @this
    _AssignLocal(_, _, ?thisVar, _, ?method).

ParamToBaseTaintTransferMethod(?index, ?method),
ParamToBaseSummarizeMethodName(?method) :-
    ParamToBaseSummarizeMethod(?index, ?method).

// ParamToOtherParamSummarizeMethodName(?method) :-
//     ParamToOtherParamSummarizeMethod(?method).


// BaseToParamSummarizeMethod(?method) :- 
//     // 函数内分析，确保函数在CG中。
//     mainAnalysis.Reachable(?method),
//     // 该 method 有函数参数
//     FormalParam(?index, ?method, _),
//     // 找到 @this
//     ThisVar(?method, ?thisVar),
//     // l0#_0 = @this
//     _AssignLocal(_, _, ?thisVar, _, ?method).

// 感觉有点问题
// 主要不太理解，这个BaseToParam的形式
// 如果 param 指的是 函数内 this 会污染到
// BaseToParamSummarizeMethod(?method) :-
//     ParamToBaseSummarizeMethodName(?method)

// BaseToParamSummarizeMethodName(?method) :-
//     BaseToParamSummarizeMethod(?method).

BaseToParamTaintTransferMethod(?method),
BaseToParamSummarizeMethodName(?method) :-
    ParamToBaseSummarizeMethodName(?method).


BaseToRetSummarizeMethod(?method) :-
    // 函数内分析，确保函数在CG中。
    mainAnalysis.Reachable(?method),
    // 找到 @this
    ThisVar(?method, ?thisVar),
    // l0#_0 = @this
    _AssignLocal(_, _, ?thisVar, _, ?method),
    // return 是函数的返回值
    isReturnNonvoid_Insn(?instruction),
    Instruction_Method(?instruction, ?method).

BaseToRetTaintTransferMethod(?method),
BaseToRetSummarizeMethodName(?method) :-
    BaseToRetSummarizeMethod(?method).

// 二期计划:
// 计算 mock- 的关系
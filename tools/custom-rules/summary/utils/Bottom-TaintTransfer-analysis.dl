// -----------------------------------------------------------------------------
// Start bottom - taint analysis rules
// -----------------------------------------------------------------------------

/**
 * Bottom Method 中需要强制设置的污点源 
*/
.decl Bottom_Method_Forced_Source_Value(value: symbol, method: Method)
.output Bottom_Method_Forced_Source_Value
.printsize Bottom_Method_Forced_Source_Value

Bottom_Method_Forced_Source_Value(value, method) :-
	BottomMethod(method),
	TaintSourceVariable(var, method),
	mainAnalysis.VarPointsTo(_, value, method, var).

MICRO_CUSTOM_TAINT(source, value, method, label) :-
	source = method,
	label = method,
	Bottom_Method_Forced_Source_Value(value, method).

/**
 * 需要考虑 to = base.field
 * from: base.field, to: to
 * 想到的思路是, 若 base 指向的是 TaintedValue
 * 则允许 field 指向的 TaintedValue 也为 TaintedValue
*/

.decl TaintObjFieldTransfer(callerCtx: symbol, from: symbol, calleeCtx: symbol, to: symbol)
// .output TaintObjFieldTransfer

// TaintObjFieldTransfer(callerCtx, from, calleeCtx, to),
MICRO_CUSTOM_TAINT(source, value, in_method, label):-
	source = baseValue,
	value = field_value,
	label = in_method,
	callerCtx = in_method,
	calleeCtx = in_method,
	from = base,
	BottomMethod(in_method),
	// TaintedVarPointsTo(baseValue, _, base),
	Extension_Value(_, field_value, _, baseValue, in_method, base, to).

// -----------------------------------------------------------------------------
// End bottom - taint analysis rules
// -----------------------------------------------------------------------------
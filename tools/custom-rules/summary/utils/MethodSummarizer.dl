
/**
 * 通过污点传播过程 
*/
.decl TaintedTransferResult(fromCtx: symbol, from: symbol, toCtx: symbol, to: symbol)
.output TaintedTransferResult
.printsize TaintedTransferResult

TaintedTransferResult(fromCtx, from, toCtx, to) :-
	TaintObjTransfer(fromCtx, from, toCtx, to).

TaintedTransferResult(fromCtx, from, toCtx, to) :-
	toCtx = in_method,
	fromCtx = in_method,
	from = base,
	TaintedVarPointsTo(baseValue, _, base),
	Extension_Value(hctx, field_value, signature, in_method, base, to).

TaintedTransferResult(fromCtx, from, toCtx, to) :-
	TaintedTransferResult(fromCtx, from, toCtx, tmp),
	TaintedTransferResult(fromCtx, tmp, toCtx, to).

/**
 * 在利用 ForcedReachable 计算函数内的指针时，需要对 this.field 进行 mock
*/
.decl Extension_Value(hctx: symbol, field_value: symbol, signature: symbol, method: Method, from_base: symbol, to: symbol)
.output Extension_Value
.printsize Extension_Value

mainAnalysis.VarPointsTo(hctx, field_value, in_method, to),
mainAnalysis.Value_isMock(field_value), isValue(field_value), mainAnalysis.Value_Type(field_value, value_type), mainAnalysis.Value_DeclaringType(field_value, declaring_type),
Extension_Value(hctx, field_value, signature, in_method, base, to) :-
 Target_Lost_Store_Target(base, signature, in_method, to),
 mainAnalysis.isImmutableHContext(hctx),
 field_value = cat(cat("<mock value for ", signature), cat(">:: ", in_method)),
 Field_Type(signature, value_type),
 Method_DeclaringType(in_method, declaring_type).

.output mainAnalysis.StoreHeapInstanceField
.output mainAnalysis.LoadHeapInstanceField
.output mainAnalysis.InstanceFieldPointsTo


/**
 * 统计哪些函数已经触发了摘要过程
*/
.decl MethodInSummaries(method: Method)
.output MethodInSummaries

/**
 * 需设计:
 * 变量传播摘要需要自动计算提供以下关系:
 * - BaseToRetTaintTransferMethod
 * - BaseToParamTaintTransferMethod
 * - ParamToBaseTaintTransferMethod
 * - ParamToRetTaintTransferMethod
 * 未考虑:
 * - ParamIndexToBaseTaintTransferMethod
*/
.comp MethodSummarizer {

	/**
	* base(this) 可以 传递到 index-th 参数
	*/
	.decl BaseToParamSummarizeMethod(index:number, method:Method)

	BaseToParamSummarizeMethod(index, method):-
		TaintedTransferResult(method, from, method, to),
		FormalParam(index, method, to),
		ThisVar(method, from).

	/**
	* base(this) 可以传递到 return
	*/
	.decl BaseToRetSummarizeMethod(method: Method)

	BaseToRetSummarizeMethod(method) :-
		TaintedTransferResult(method, from, method, to),
		ReturnVar(to, method),
		ThisVar(method, from).

	/**
	* index-th 可以传递到 return
	*/
	.decl ParamToRetSummarizeMethod(index:number, method:Method)

	ParamToRetSummarizeMethod(index, method) :-
		TaintedTransferResult(method, from, method, to),
		ReturnVar(to, method),
		FormalParam(index, method, from).

	/**	
	* index-th 参数 可以传递到 base(this)
	*/
	.decl ParamToBaseSummarizeMethod(index:number, method:Method)

	ParamToBaseSummarizeMethod(index, method) :-
		TaintedTransferResult(method, from, method, to),
		ThisVar(method, to),
		FormalParam(index, method, from).
}


.init Summarizer = MethodSummarizer

.printsize Summarizer.BaseToParamSummarizeMethod
.printsize Summarizer.BaseToRetSummarizeMethod
.printsize Summarizer.ParamToRetSummarizeMethod
.printsize Summarizer.ParamToBaseSummarizeMethod

.output Summarizer.BaseToRetSummarizeMethod
.output Summarizer.ParamToRetSummarizeMethod